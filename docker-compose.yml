
services:
  redis:
    image: redis:7.0-alpine
    container_name: lakes-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5


  app:
    build: .
    depends_on:
      redis:
        condition: service_healthy
    environment:
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-CHANGE_ME_SECURE_PASSWORD_123}
      ALLOW_LIVE_USGS_FETCH: ${ALLOW_LIVE_USGS_FETCH:-true}
    ports:
      - "3000:3000"
    command: ["sh", "-c", "sleep 5 && node server.js"]
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  preload:
    build: .
    depends_on:
      redis:
        condition: service_healthy
      app:
        condition: service_healthy
    environment:
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-CHANGE_ME_SECURE_PASSWORD_123}
      ALLOW_LIVE_USGS_FETCH: ${ALLOW_LIVE_USGS_FETCH:-true}
    command: ["sh", "-c", "sleep 10 && ./wait-for-redis.sh node --max-old-space-size=4096 preload-data.js"]

  nginx:
    image: nginx:alpine
    container_name: lakes-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    profiles:
      - production

volumes:
  redis_data:
    driver: local
